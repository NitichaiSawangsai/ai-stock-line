const OpenAIService = require('./openaiService');
const GeminiService = require('./geminiService');
const WebSearchService = require('./webSearchService');
const CostTracker = require('./costTracker');
const StockRiskAnalyzer = require('./stockRiskAnalyzer');
const logger = require('./logger');

class AIAnalysisService {
    constructor(config) {
        this.config = config;
        this.costTracker = new CostTracker();
        
        // Initialize AI services
        this.openaiService = new OpenAIService(config.openaiApiKey, config.openaiModel);
        this.geminiService = new GeminiService(config.geminiApiKey, config.geminiModel);
        
        // Initialize Web Search service
        this.webSearchService = new WebSearchService(
            config.googleSearchApiKey, 
            config.googleSearchEngineId, 
            config.newsApiKey,
            config.googleSearchDailyLimit,
            config.googleSearchFreeDaily
        );
        
        // Initialize Stock Risk Analyzer
        this.stockRiskAnalyzer = new StockRiskAnalyzer(this.webSearchService, this.costTracker);
    }

    createAnalysisPrompt(stockData, newsData = null) {
        const today = new Date();
        const todayThai = today.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        const todayEng = today.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        let newsContext = '';
        if (newsData) {
            // ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î prompt ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡∏á‡πÄ‡∏Ç‡∏õ
            const allNews = [
                ...newsData.economic.slice(0, 2),
                ...newsData.geopolitical.slice(0, 1),
                ...newsData.gold.slice(0, 1),
                ...newsData.stock.slice(0, 2),
                ...newsData.crypto.slice(0, 1),
                ...newsData.currency.slice(0, 1)
            ];
            
            newsContext = `‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\n${allNews.map(news => `‚Ä¢ ${news.title} - ${news.url}`).join('\n')}`;
        } else {
            newsContext = `‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÑ‡∏î‡πâ`;
        }

        return `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${todayEng} (${todayThai})

${newsContext}

‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∏‡∏ô:
${stockData}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:
üìä ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (2-3 ‡∏Ç‡πà‡∏≤‡∏ß) ‡∏û‡∏£‡πâ‡∏≠‡∏° URL
üìà ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô: ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á 1-10, ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≥‡πÑ‡∏£ 1-10
üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥`;
    }

    async selectBestAIService(monthlyCostLimit) {
        try {
            // Check budget status
            const budgetStatus = await this.costTracker.checkBudgetLimit(monthlyCostLimit);
            
            if (budgetStatus.isOverBudget) {
                logger.money('‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì! ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ü‡∏£‡∏µ');
                // Switch to free models
                if (this.geminiService.isFree || this.costTracker.isFreeTier('gemini', this.config.geminiModel)) {
                    return { service: this.geminiService, reason: '‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì - ‡πÉ‡∏ä‡πâ Gemini ‡∏ü‡∏£‡∏µ' };
                } else {
                    // Force free mode
                    this.geminiService.isFree = true;
                    return { service: this.geminiService, reason: '‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì - ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏ü‡∏£‡∏µ' };
                }
            }

            // Check which service is available
            if (this.openaiService.isEnabled) {
                return { service: this.openaiService, reason: 'OpenAI API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' };
            } else if (this.geminiService.isEnabled) {
                return { service: this.geminiService, reason: 'Gemini API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' };
            } else {
                console.log('üÜì ‡πÑ‡∏°‡πà‡∏°‡∏µ API Key ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏ü‡∏£‡∏µ');
                this.geminiService.isFree = true;
                return { service: this.geminiService, reason: '‡πÑ‡∏°‡πà‡∏°‡∏µ API Key - ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏ü‡∏£‡∏µ' };
            }

        } catch (error) {
            console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å AI Service:', error.message);
            // Fallback to free mode
            this.geminiService.isFree = true;
            return { service: this.geminiService, reason: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î - ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏ü‡∏£‡∏µ' };
        }
    }

    async generateAnalysis(stockData, monthlyCostLimit = 100) {
        try {
            console.log('üîç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...');
            
            // Step 1: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏´‡∏∏‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
            logger.startOperation('‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏´‡∏∏‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°');
            const riskAnalysis = await this.stockRiskAnalyzer.analyzeStockRisk(stockData);
            const riskReport = this.stockRiskAnalyzer.generateRiskReport(riskAnalysis);
            logger.finishOperation('‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
            
            // Step 2: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
            let newsData = null;
            if (this.webSearchService.isGoogleEnabled || this.webSearchService.isNewsEnabled) {
                newsData = await this.webSearchService.searchAllNews();
            } else {
                logger.warn('‚ö†Ô∏è Web Search APIs ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô - ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á');
            }
            
            // Step 3: ‡πÅ‡∏¢‡∏Å stockData ‡πÄ‡∏õ‡πá‡∏ô stockList ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô
            const stockList = this.parseStockDataToList(stockData);
            
            // Step 4: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô
            let stockAnalysis = [];
            if (stockList.length > 0 && this.webSearchService.isGoogleEnabled) {
                stockAnalysis = await this.webSearchService.searchStockSpecificNews(stockList);
            }
            
            // Step 5: Select best AI service based on budget
            const { service, reason } = await this.selectBestAIService(monthlyCostLimit);
            logger.info(`‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ: ${service.constructor.name} (${reason})`);

            // Step 6: Create enhanced prompt with comprehensive risk analysis
            const prompt = this.createComprehensiveAnalysisPrompt(stockData, newsData, stockAnalysis, riskReport);
            logger.process(`‡∏™‡∏£‡πâ‡∏≤‡∏á Prompt ‡πÄ‡∏™‡∏£‡πá‡∏à (${prompt.length} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)`);

            // Step 7: Generate response
            let response;
            if (prompt.length > 4000) {
                logger.process('Prompt ‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô...');
                response = await service.generateResponseInChunks(prompt);
            } else {
                response = await service.generateResponse(prompt);
            }

            // Step 8: Combine AI response with risk analysis
            const combinedAnalysis = this.combineAnalysisResults(response.content, riskReport, riskAnalysis);
            response.content = combinedAnalysis;

            // Step 9: Track costs if not free
            if (!service.isFree) {
                const exchangeRate = await this.costTracker.getExchangeRate();
                await this.costTracker.updateCostTracking(
                    response.provider,
                    response.model,
                    response.usage.inputTokens,
                    response.usage.outputTokens,
                    exchangeRate
                );
            }

            logger.success('‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
            return response;

        } catch (error) {
            logger.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', error.message);
            throw error;
        }
    }
    
    // ‡πÅ‡∏¢‡∏Å stockData string ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô
    parseStockDataToList(stockData) {
        const lines = stockData.split('\n').filter(line => line.trim());
        const stockList = [];
        
        for (const line of lines) {
            const parts = line.trim().split(/\s+/);
            if (parts.length >= 3) {
                stockList.push({
                    type: parts[0],
                    symbol: parts[1], 
                    amount: parts[2],
                    purchasePrice: parts.length > 3 ? parts[3] : '-'
                });
            }
        }
        
        return stockList;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏à‡∏≤‡∏∞‡∏•‡∏∂‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô
    createEnhancedAnalysisPrompt(stockData, newsData = null, stockAnalysis = []) {
        const today = new Date();
        const todayThai = today.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long', 
            day: 'numeric'
        });
        const todayEng = today.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric' 
        });

        let newsContext = '';
        if (newsData) {
            const allNews = [
                ...newsData.economic.slice(0, 2),
                ...newsData.geopolitical.slice(0, 1),
                ...newsData.gold.slice(0, 1),
                ...newsData.stock.slice(0, 2),
                ...newsData.crypto.slice(0, 1),
                ...newsData.currency.slice(0, 1)
            ];
            
            newsContext = `‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ:\n${allNews.map(news => `‚Ä¢ ${news.title} - ${news.url}`).join('\n')}`;
        } else {
            newsContext = `‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÑ‡∏î‡πâ`;
        }
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô
        let stockSpecificContext = '';
        if (stockAnalysis.length > 0) {
            stockSpecificContext = '\n\n‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô:\n';
            
            for (const stock of stockAnalysis) {
                stockSpecificContext += `\n${stock.symbol}:\n`;
                stockSpecificContext += `- ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${stock.currentPrice}\n`;
                stockSpecificContext += `- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á: ${stock.analysis.riskLevel}/10\n`;
                stockSpecificContext += `- ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≥‡πÑ‡∏£: ${stock.analysis.profitOpportunity}/10\n`;
                stockSpecificContext += `- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏•‡πâ‡∏°‡∏•‡∏∞‡∏•‡∏≤‡∏¢: ${stock.analysis.bankruptcyRisk}\n`;
                if (stock.analysis.currentReturn !== 'N/A') {
                    stockSpecificContext += `- ‡∏Å‡∏≥‡πÑ‡∏£‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${stock.analysis.currentReturn}\n`;
                }
                stockSpecificContext += `- ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ${stock.analysis.recommendation}\n`;
                
                if (stock.news.length > 0) {
                    stockSpecificContext += `- ‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${stock.news[0].title}\n`;
                }
            }
        }

        return `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${todayEng} (${todayThai})

${newsContext}${stockSpecificContext}

‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∏‡∏ô:
${stockData}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:
üìä ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏∏‡πâ‡∏ô)
üìà ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô: ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á 1-10, ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≥‡πÑ‡∏£ 1-10
üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô`;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
    createComprehensiveAnalysisPrompt(stockData, newsData = null, stockAnalysis = [], riskReport = '') {
        const today = new Date();
        const todayThai = today.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long', 
            day: 'numeric'
        });
        const todayEng = today.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric' 
        });

        let newsContext = '';
        if (newsData) {
            const allNews = [
                ...newsData.economic.slice(0, 2),
                ...newsData.geopolitical.slice(0, 1),
                ...newsData.gold.slice(0, 1),
                ...newsData.stock.slice(0, 2),
                ...newsData.crypto.slice(0, 1),
                ...newsData.currency.slice(0, 1)
            ];
            
            newsContext = `‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\n${allNews.map(news => `‚Ä¢ ${news.title} - ${news.url}`).join('\n')}`;
        } else {
            newsContext = `‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÑ‡∏î‡πâ`;
        }

        return `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${todayEng} (${todayThai})

${newsContext}

‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∏‡∏ô:
${stockData}

‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡πÑ‡∏ß‡πâ:
${riskReport}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:
üì∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö
üéØ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
üí≠ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πà‡∏≤‡∏ß‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô`;
    }

    // ‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
    combineAnalysisResults(aiResponse, riskReport, riskAnalysis) {
        const separator = '\n' + '='.repeat(50) + '\n';
        
        let combinedResult = 'üîç **‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏∏‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°**\n';
        combinedResult += `üìÖ **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:** ${new Date().toLocaleDateString('th-TH')}\n\n`;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        combinedResult += riskReport;
        combinedResult += separator;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å AI
        combinedResult += 'ü§ñ **‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å AI:**\n\n';
        combinedResult += aiResponse;
        combinedResult += separator;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
        if (riskAnalysis.length > 0) {
            combinedResult += 'üìä **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:**\n';
            
            let totalCurrentValue = 0;
            let totalPurchaseValue = 0;
            
            for (const analysis of riskAnalysis) {
                totalCurrentValue += analysis.currentValue;
                totalPurchaseValue += analysis.purchaseValue;
            }
            
            const totalReturnPct = totalPurchaseValue > 0 ? 
                ((totalCurrentValue - totalPurchaseValue) / totalPurchaseValue) * 100 : 0;
            
            combinedResult += `‚Ä¢ ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏£‡∏ß‡∏°: $${totalCurrentValue.toFixed(2)} (‚âà${(totalCurrentValue * 34.5).toFixed(0)} ‡∏ö‡∏≤‡∏ó)\n`;
            combinedResult += `‚Ä¢ ‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°: ${totalReturnPct >= 0 ? 'üìà' : 'üìâ'} ${totalReturnPct.toFixed(1)}%\n`;
            combinedResult += `‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: ${riskAnalysis.length} ‡∏ï‡∏±‡∏ß\n`;
        }
        
        combinedResult += '\n‚è∞ **‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:** ' + new Date().toLocaleString('th-TH');
        
        return combinedResult;
    }

    async generateCostSummary() {
        try {
            const summary = await this.costTracker.generateCostSummary();
            const quotaStatus = await this.webSearchService.getQuotaStatus();
            
            const summaryText = `
üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢

üìä ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ:
‚Ä¢ Token ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${summary.currentSession.tokens.toLocaleString()} tokens
‚Ä¢ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: $${summary.currentSession.costUSD.toFixed(4)} (${summary.currentSession.costTHB.toFixed(2)} ‡∏ö‡∏≤‡∏ó)
‚Ä¢ ‡πÇ‡∏°‡πÄ‡∏î‡∏•: ${summary.currentSession.provider}/${summary.currentSession.model}

üìà ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:
‚Ä¢ Token ‡∏£‡∏ß‡∏°: ${summary.monthlyTotal.tokens.toLocaleString()} tokens
‚Ä¢ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°: $${summary.monthlyTotal.costUSD.toFixed(4)} (${summary.monthlyTotal.costTHB.toFixed(2)} ‡∏ö‡∏≤‡∏ó)
‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${summary.monthlyTotal.sessions} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á

üîç Google Search Quota ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ:
‚Ä¢ ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß: ${quotaStatus.used}/${quotaStatus.limit} ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô (${quotaStatus.percentage}%)
‚Ä¢ ‡∏ü‡∏£‡∏µ: ${quotaStatus.freeUsed}/${quotaStatus.freeLimit} ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô
‚Ä¢ ‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πà‡∏≤: ${quotaStatus.paidUsed} ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô
‚Ä¢ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${quotaStatus.todayCost.toFixed(2)} ‡∏ö‡∏≤‡∏ó
‚Ä¢ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ: ${quotaStatus.monthlyCost.toFixed(2)} ‡∏ö‡∏≤‡∏ó
‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${quotaStatus.remaining} ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô
‚Ä¢ Reset: ${quotaStatus.resetTime}

‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô: 1 USD = ${summary.currentSession.exchangeRate || 35} THB
`.trim();

            return summaryText;
        } catch (error) {
            logger.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢', error.message);
            return `
üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢

‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ
`.trim();
        }
    }
}

module.exports = AIAnalysisService;